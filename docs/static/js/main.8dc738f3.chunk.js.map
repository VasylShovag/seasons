{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"sMAIMA,G,MAAe,CACjBC,OAAQ,CACJC,KAAM,qBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,kBACNC,SAAU,eAwBHE,EAZO,SAAAC,GAClB,IATeC,EAAKC,EASdC,GATSF,EASUD,EAAMC,KATXC,GASgB,IAAIE,MAAOC,YARnC,GAAKH,EAAO,EACZD,EAAM,EAAI,SAAW,SAEtBA,GAAO,EAAI,SAAW,UAIN,EAEFP,EAAaS,GAA/BP,EAFoB,EAEpBA,KAAMC,EAFc,EAEdA,SAGb,OAAO,yBAAKS,UAAS,yBAAoBH,IAC7B,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAAwBT,EAAxB,aC7BtBU,EAAU,SAACP,GACb,OACQ,yBAAKM,UAAU,oBACX,yBAAKA,UAAU,sBAAsBN,EAAMQ,WAO3DD,EAAQE,aAAe,CACrBD,QAAS,cAGID,QCVTG,E,2MACFC,MAAQ,CAACV,IAAK,KAAMW,aAAc,I,mFAEb,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBACzB,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cAEnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,sCAK/C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAChC,uCAAaqB,KAAKX,MAAMC,eAG9BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAChC,kBAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAGrCqB,KAAKX,MAAMC,cAAiBU,KAAKX,MAAMV,SAA5C,EACW,kBAAC,EAAD,CAASO,QAAQ,iB,+BAO5B,OACI,yBAAKF,UAAU,cACVgB,KAAKC,qB,GA9BJC,IAAMC,WAsCxBC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,W","file":"static/js/main.8dc738f3.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from \"react\";\r\n\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n        text: 'Lets hit the beach',\r\n        iconName: 'sun'\r\n    },\r\n    winter: {\r\n        text: 'Burr it is snow',\r\n        iconName: 'snowflake'\r\n    }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n    if (month > 2 && month <9) {\r\n        return  lat > 0 ? 'summer' : 'winter';\r\n    } else {\r\n        return lat >= 0 ? 'winter' : 'summer';\r\n    }\r\n};\r\n\r\nconst SeasonDisplay = props => {\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const {text, iconName} = seasonConfig[season];\r\n\r\n\r\n    return <div className={`season-display ${season}`}>\r\n                <i className={`icon-left massive ${iconName} icon`} />\r\n                <h1>{text}</h1>\r\n                <i className={`icon-right massive ${iconName} icon`} />\r\n           </div>\r\n};\r\n\r\nexport default SeasonDisplay;","import React from \"react\";\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n            <div className=\"ui active dimmer\">\r\n                <div className=\"ui big text loader\">{props.message}</div>\r\n            </div>\r\n\r\n    )\r\n\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message: 'loading...'\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay'\nimport Spinner from \"./Spinner\";\n\n\nclass App extends React.Component {\n    state = {lat: null, errorMessage: ''};\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => this.setState({ lat: position.coords.latitude }),\n                //we called setstate!\n            (err) => this.setState({ errorMessage: err.message })\n    );\n    }\n\n    renderContent () {\n        if (this.state.errorMessage && !this.state.lat) {\n            return <div>Error: {this.state.errorMessage}</div>\n        }\n\n        if (!this.state.errorMessage && this.state.lat) {\n            return <SeasonDisplay lat={this.state.lat} />\n        }\n\n        if (!this.state.errorMessage && !this.state.lat) {\n            return <Spinner message=\"Please ...\"/>\n        }\n    }\n\n\n    //react says we have to define render\n    render() {\n        return (\n            <div className=\"border red\">\n                {this.renderContent()}\n            </div>\n        )\n    }\n}\n\n\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}